{"version":3,"sources":["utils/kindOf.js"],"names":["define","miniKindOf","val","type","Array","isArray","Date","toDateString","getDate","setDate","isDate","Error","message","constructor","stackTraceLimit","isError","constructorName","name","ctorName","slice","toLowerCase","replace","kindOf","typeOfVal","process","env","NODE_ENV"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aACA,SAASC,EAAWC,GAChB,QAAY,IAARA,EACA,MAAO,YACX,GAAY,OAARA,EACA,MAAO,OACX,MAAMC,SAAcD,EACpB,OAAQC,GACR,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,WACG,OAAOA,EAKf,GAAIC,MAAMC,QAAQH,GACd,MAAO,QACX,GAwBJ,SAAgBA,GACZ,OAAIA,aAAeI,MAEgB,mBAArBJ,EAAIK,cAAsD,mBAAhBL,EAAIM,SAAiD,mBAAhBN,EAAIO,QA3B7FC,CAAOR,GACP,MAAO,OACX,GAmBJ,SAAiBA,GACb,OAAOA,aAAeS,OAAgC,iBAAhBT,EAAIU,SAAwBV,EAAIW,aAA0D,iBAApCX,EAAIW,YAAYC,gBApBxGC,CAAQb,GACR,MAAO,QACX,MAAMc,EAcV,SAAkBd,GACd,MAAkC,mBAApBA,EAAIW,YAA6BX,EAAIW,YAAYI,KAAO,KAf9CC,CAAShB,GACjC,OAAQc,GACR,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,MACL,IAAK,MACD,OAAOA,EAIX,OAAOb,EAAKgB,MAAM,GAAI,GAAGC,cAAcC,QAAQ,MAAO,IAoB1D,OAASC,OAPT,SAAgBpB,GACZ,IAAIqB,SAAmBrB,EAIvB,MAH6B,eAAzBsB,QAAQC,IAAIC,WACZH,EAAYtB,EAAWC,IAEpBqB","file":"../../utils/kindOf.js","sourcesContent":["define(function () {\n    'use strict';\n    function miniKindOf(val) {\n        if (val === void 0)\n            return 'undefined';\n        if (val === null)\n            return 'null';\n        const type = typeof val;\n        switch (type) {\n        case 'boolean':\n        case 'string':\n        case 'number':\n        case 'symbol':\n        case 'function': {\n                return type;\n            }\n        default:\n            break;\n        }\n        if (Array.isArray(val))\n            return 'array';\n        if (isDate(val))\n            return 'date';\n        if (isError(val))\n            return 'error';\n        const constructorName = ctorName(val);\n        switch (constructorName) {\n        case 'Symbol':\n        case 'Promise':\n        case 'WeakMap':\n        case 'WeakSet':\n        case 'Map':\n        case 'Set':\n            return constructorName;\n        default:\n            break;\n        }\n        return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n    }\n    function ctorName(val) {\n        return typeof val.constructor === 'function' ? val.constructor.name : null;\n    }\n    function isError(val) {\n        return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n    }\n    function isDate(val) {\n        if (val instanceof Date)\n            return true;\n        return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n    }\n    function kindOf(val) {\n        let typeOfVal = typeof val;\n        if (process.env.NODE_ENV !== 'production') {\n            typeOfVal = miniKindOf(val);\n        }\n        return typeOfVal;\n    }\n    return { kindOf: kindOf };\n});"]}